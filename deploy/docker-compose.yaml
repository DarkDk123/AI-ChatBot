services:
  # AI-ChatBot-Server
  chatbot-server:
    build:
      context: ../src/chatbot/
      dockerfile: dockerfile
    command: --port 8001 --host 0.0.0.0 --workers 2
    environment:
      # LLM ENVs
      LLM_MODEL_ENGINE: "${LLM_MODEL_ENGINE:-groq}"
      LLM_MODEL_NAME: "${LLM_MODEL_NAME:-llama-3.1-8b-instant}"
      LLM_BASE_URL: "${LLM_BASE_URL:-https://api.groq.com/openai/v1}"
      LLM_API_KEY: "${LLM_API_KEY}" # Something like gsk_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

      # DB ENVs
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      POSTGRES_DB: "${POSTGRES_DB:-postgres}"
      DATABASE_URL: "${DATABASE_URL:-postgres:5432}"

      # Cache ENVs
      CACHE_NAME: "${CACHE_NAME:-redis}"
      CACHE_URL: "${CACHE_URL:-redis:6379}"
      REDIS_DB: "${REDIS_DB:-0}"

    ports:
      - 8001:8001
    depends_on:
      - postgres
      - redis

  # Postgres Database
  postgres:
    image: postgres:17.1
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "postgres"
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "max_connections=200"
    volumes:
      - "${DOCKER_VOLUME_DIRECTORY:-.}/bot_volumes/db-data:/var/lib/postgresql/data/"
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # Cache service - Redis
  redis:
    image: redis:7.0.13
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "${DOCKER_VOLUME_DIRECTORY:-.}/bot_volumes/redis-data:/data"

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "9092:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis

networks:
  default:
    name: ChatBot-Network
    driver: bridge
